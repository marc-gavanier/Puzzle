import timeit

from Grid import Grid
from Puzzles.Sudoku.SudokuGame import SudokuGame


class HitoriBenchmark:
    def __init__(self):
        self.grids4x4 = [
            [[1, -1, -1, -1], [-1, -1, -1, -1], [3, -1, -1, 2], [2, -1, 3, 1]],
            [[2, -1, -1, 3], [-1, 4, -1, 1], [-1, 2, -1, -1], [-1, -1, 1, -1]],
            [[-1, 3, -1, -1], [-1, 2, 4, 3], [-1, -1, 2, -1], [-1, 1, -1, -1]],
            [[4, -1, -1, -1], [-1, -1, 1, -1], [-1, 4, -1, 1], [-1, 2, -1, 3]],
            [[-1, 3, 4, -1], [-1, -1, 2, -1], [-1, -1, 1, -1], [-1, 1, -1, 2]],
            [[4, -1, -1, -1], [-1, -1, 3, -1], [-1, -1, -1, -1], [2, 4, -1, -1]],
            [[-1, -1, -1, -1], [-1, -1, 2, -1], [-1, 1, -1, -1], [-1, 4, -1, 1]]
        ]

        self.grids6x6 = [
            [[6, -1, 3, -1, -1, -1], [-1, 5, -1, -1, -1, 2], [2, -1, -1, -1, 6, 3], [-1, -1, -1, -1, 1, -1], [1, -1, 6, -1, -1, 5], [5, -1, -1, -1, -1, -1]],
            [[-1, -1, 4, -1, -1, -1], [-1, -1, -1, -1, -1, 6], [-1, -1, -1, -1, -1, -1], [2, 6, -1, -1, 5, -1], [-1, 5, -1, -1, -1, 1], [-1, -1, 1, 4, -1, -1]],
            [[-1, -1, 5, 1, -1, -1], [-1, 6, -1, -1, 3, -1], [1, -1, -1, -1, -1, -1], [-1, 2, -1, -1, 6, -1], [-1, -1, -1, -1, -1, 5], [4, -1, -1, -1, -1, -1]],
            [[-1, -1, -1, 6, -1, -1], [3, -1, -1, -1, -1, -1], [-1, -1, 5, -1, 2, -1], [-1, 4, 1, -1, -1, -1], [-1, -1, -1, -1, -1, -1], [-1, 5, -1, 3, -1, 4]],
            [[-1, -1, -1, 1, -1, -1], [-1, -1, 5, 3, -1, -1], [-1, 4, -1, -1, -1, -1], [3, -1, -1, -1, 6, -1], [-1, -1, -1, -1, -1, 1], [4, -1, -1, 2, -1, -1]],
            [[-1, -1, 1, -1, 2, 3], [-1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1], [-1, -1, 2, 3, 6, -1], [-1, 4, -1, -1, 1, -1], [5, -1, -1, -1, -1, -1]],
            [[1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, 2, 4], [-1, -1, -1, -1, -1, 6], [-1, 3, -1, -1, -1, -1], [2, -1, -1, -1, -1, -1], [-1, 4, -1, 6, 3, -1]],
        ]

        self.grids9x9 = [
            [
                [-1, 8, -1, -1, -1, -1, 1, 3, -1], [-1, -1, -1, -1, 1, 4, -1, -1, -1], [-1, -1, -1, -1, -1, 6, -1, 2, -1], [-1, 6, -1, -1, 4, -1, 8, -1, 5], [3, -1, -1, -1, -1, -1, -1, -1, 9],
                [-1, 5, 9, -1, -1, -1, 2, -1, -1], [-1, -1, -1, 8, -1, -1, -1, -1, 4], [6, 7, -1, -1, -1, 9, -1, -1, -1], [2, -1, -1, -1, -1, -1, -1, -1, -1]
            ],
            [
                [-1, -1, 5, -1, 2, -1, 6, -1, -1], [-1, 9, -1, -1, -1, 4, -1, 1, -1], [2, -1, -1, 5, -1, -1, -1, -1, -1], [-1, -1, 6, -1, 3, -1, -1, -1, -1], [-1, -1, -1, 8, -1, 1, -1, -1, -1],
                [-1, -1, -1, -1, 9, -1, 4, -1, -1], [3, -1, -1, -1, -1, 2, -1, -1, 7], [-1, 1, -1, 9, -1, -1, -1, 5, -1], [-1, -1, 4, -1, 6, -1, 8, -1, -1]
            ],
            [
                [-1, -1, -1, -1, 7, 8, -1, -1, -1], [-1, -1, -1, -1, -1, 3, -1, 7, 8], [-1, 1, -1, -1, -1, -1, -1, -1, 9], [-1, -1, -1, -1, 5, -1, -1, 6, -1], [9, -1, 2, -1, -1, -1, -1, -1, -1],
                [-1, -1, -1, -1, -1, -1, -1, 1, -1], [-1, -1, 9, 1, -1, -1, 6, 4, 2], [-1, 3, -1, -1, -1, -1, -1, -1, -1], [7, 4, -1, 5, 6, -1, -1, -1, -1]

            ],
            [
                [-1, 8, -1, -1, 7, -1, -1, 2, -1], [4, -1, -1, -1, -1, -1, -1, 5, 8], [-1, -1, -1, -1, 5, -1, -1, -1, -1], [1, -1, -1, 8, -1, -1, 6, -1, -1], [7, 5, -1, 4, -1, -1, -1, -1, -1],
                [-1, -1, 9, -1, -1, 6, -1, -1, 7], [-1, -1, -1, -1, -1, -1, -1, -1, 6], [-1, -1, -1, -1, 9, -1, 3, -1, -1], [-1, 1, 3, -1, -1, 2, -1, -1, -1]

            ],
            [
                [-1, -1, 4, -1, 8, 3, -1, -1, -1], [-1, -1, -1, -1, -1, -1, 9, -1, 3], [9, 2, -1, -1, -1, -1, -1, 4, -1], [-1, 4, -1, 5, -1, -1, -1, -1, 6], [3, 1, -1, -1, -1, -1, -1, -1, -1],
                [-1, -1, -1, 2, 9, -1, -1, 5, -1], [-1, -1, -1, -1, -1, -1, 8, -1, -1], [-1, 7, -1, -1, -1, 8, 5, -1, -1], [-1, -1, -1, -1, -1, 2, -1, 1, -1]
            ],
            [
                [-1, 5, -1, -1, -1, -1, -1, -1, -1], [-1, -1, 2, 4, -1, 3, 8, 7, 1], [1, 7, -1, 2, 9, 6, 5, 3, -1], [6, -1, -1, -1, -1, -1, 7, -1, -1], [-1, -1, -1, -1, 1, 4, 9, -1, 3],
                [5, -1, -1, -1, 8, 9, 1, 6, -1], [-1, 8, -1, 3, 6, -1, 4, -1, -1], [-1, 4, 5, -1, 2, -1, -1, 8, -1], [2, 9, -1, -1, 4, -1, -1, -1, -1]
            ],
            [
                [-1, -1, -1, -1, 6, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1, 8], [-1, 9, 3, 2, -1, -1, -1, -1, 1], [-1, -1, -1, -1, -1, 5, -1, -1, -1], [4, -1, -1, -1, -1, 1, 6, 2, -1],
                [-1, -1, -1, 9, -1, -1, 3, -1, -1], [-1, -1, -1, -1, 3, -1, -1, 1, -1], [6, -1, -1, -1, -1, 8, -1, -1, 9], [-1, 2, 4, 5, -1, 7, -1, -1, -1]
            ]
        ]

        self.grids12x12 = [
            [
                [9, -1, 7, -1, -1, 6, -1, -1, 1, 11, -1, 5], [-1, -1, -1, -1, 1, -1, 9, -1, -1, 3, -1, 4], [-1, -1, 11, -1, -1, 2, 3, 12, 6, 10, -1, -1], [3, -1, -1, 12, -1, 7, 4, -1, -1, 5, 1, -1], [-1, -1, 9, -1, -1, -1, -1, -1, 8, -1, -1, -1],
                [-1, 1, -1, -1, 2, -1, -1, 3, -1, -1, -1, -1], [4, 9, -1, 7, -1, -1, -1, -1, -1, -1, -1, 10], [-1, 6, 1, -1, -1, 5, -1, -1, -1, -1, 12, -1], [-1, -1, 3, 10, -1, 4, -1, -1, 11, -1, 6, 1], [11, -1, -1, -1, 12, -1, -1, 2, 5, 7, -1, 3],
                [-1, -1, 4, -1, -1, -1, 6, 7, 2, 12, -1, -1], [5, -1, -1, -1, -1, -1, 11, -1, -1, -1, 8, 6]
            ],
            [
                [-1, -1, -1, -1, 5, 3, -1, -1, -1, -1, -1, 9], [1, -1, -1, -1, -1, -1, -1, 4, -1, 2, -1, -1], [-1, 5, -1, 8, 6, -1, 2, 10, -1, 12, -1, 7], [-1, -1, -1, 12, -1, 2, -1, 5, -1, -1, 9, 8], [-1, -1, -1, -1, -1, -1, -1, 9, 5, -1, 7, 12],
                [-1, 10, -1, -1, -1, 7, -1, -1, -1, -1, 1, 11], [-1, -1, -1, -1, -1, -1, 6, -1, -1, -1, -1, -1], [-1, 9, -1, -1, -1, 12, -1, 2, 7, 10, 6, 4], [10, -1, 6, -1, 7, 4, -1, -1, 3, -1, -1, 2], [-1, 11, 10, 1, -1, 8, 5, -1, -1, 9, -1, 3],
                [7, -1, -1, -1, -1, -1, 3, -1, 12, 11, 8, 10], [-1, 4, -1, -1, 2, -1, -1, -1, 1, -1, -1, -1]
            ],
            [
                [9, -1, -1, -1, 10, 4, -1, 12, -1, 5, 2, -1], [-1, -1, 4, -1, -1, 5, -1, -1, 11, 7, -1, -1], [-1, -1, 2, -1, 8, 9, -1, -1, -1, 6, -1, -1], [2, -1, -1, 6, -1, -1, -1, 10, -1, -1, -1, 4], [-1, -1, -1, 11, -1, -1, -1, -1, 10, 1, 6, -1],
                [-1, -1, -1, -1, 7, 6, 8, -1, -1, -1, 12, -1], [-1, 12, 10, -1, -1, 8, 9, -1, -1, -1, -1, -1], [11, 1, -1, -1, -1, -1, -1, -1, -1, -1, 8, 3], [-1, 2, 6, -1, 3, -1, 12, 4, -1, -1, -1, 11], [-1, 11, -1, 9, -1, -1, -1, -1, 6, 2, -1, 7],
                [1, -1, 7, -1, -1, -1, 4, -1, -1, -1, 5, -1], [-1, 3, 12, 2, -1, -1, -1, 5, 4, -1, 1, 9]
            ],
            [
                [3, 10, 7, -1, -1, 12, -1, 4, -1, -1, -1, 11], [-1, -1, 11, -1, 7, -1, 6, 9, -1, 4, 12, -1], [-1, 2, -1, 9, -1, -1, -1, 8, 5, -1, 6, -1], [7, -1, -1, -1, 6, -1, 8, 5, -1, -1, 3, -1], [-1, -1, -1, -1, -1, -1, -1, -1, -1, 9, 1, -1],
                [-1, 9, -1, -1, -1, 3, -1, 10, 7, 5, 11, 4], [12, 4, -1, 7, 10, -1, -1, -1, -1, -1, -1, -1], [10, -1, -1, 5, 8, 1, -1, 11, 12, 6, -1, -1], [-1, -1, -1, -1, -1, -1, 2, 7, -1, -1, -1, 9], [-1, 12, -1, -1, -1, -1, -1, 6, -1, -1, 5, -1],
                [-1, -1, 6, -1, -1, -1, -1, -1, 11, -1, 10, 3], [-1, -1, -1, -1, 3, 8, -1, -1, 4, 1, -1, -1]
            ],
            [
                [6, 3, -1, -1, 10, -1, 2, -1, -1, -1, -1, -1], [1, -1, -1, 12, -1, 6, 7, -1, -1, -1, -1, 11], [-1, 5, 8, 9, 4, -1, -1, -1, -1, 7, 6, -1], [4, -1, -1, 5, -1, -1, -1, -1, 8, 11, -1, -1], [-1, 8, -1, -1, -1, -1, 10, -1, 3, -1, -1, 5],
                [-1, -1, -1, 2, 7, -1, -1, 5, -1, -1, -1, 12], [-1, 2, 11, -1, 8, 9, -1, -1, -1, 3, 10, -1], [12, -1, 9, -1, -1, -1, 6, -1, 7, -1, 5, -1], [-1, 10, -1, -1, 12, -1, 5, 3, 11, -1, -1, -1], [2, -1, -1, 8, 1, 10, -1, -1, 9, -1, 4, -1],
                [3, -1, -1, 6, -1, -1, -1, -1, 1, -1, -1, 10], [-1, -1, -1, -1, -1, 8, -1, 2, 6, -1, -1, -1]
            ],
            [
                [-1, -1, 12, 10, -1, -1, 5, 9, 2, 7, -1, -1], [-1, -1, -1, 11, 12, 10, -1, -1, 1, 4, -1, -1], [-1, -1, -1, 2, -1, -1, -1, -1, 12, -1, -1, -1], [9, -1, -1, -1, -1, 1, -1, 3, 7, 11, -1, -1], [2, -1, 11, -1, 9, -1, -1, -1, -1, -1, 6, -1],
                [-1, 6, -1, -1, 8, -1, -1, -1, 5, 12, 9, -1], [-1, 3, -1, 4, 10, -1, -1, -1, -1, 2, 7, 12], [11, -1, 2, -1, 4, -1, -1, 8, -1, -1, -1, 5], [-1, 7, 5, -1, -1, -1, 2, 6, 10, -1, -1, 4], [-1, -1, 3, 8, -1, -1, -1, -1, 11, -1, 1, 7],
                [-1, -1, 1, -1, -1, 9, -1, -1, -1, -1, 4, -1], [4, -1, -1, -1, -1, 11, -1, -1, 8, 5, -1, -1]
            ]
        ]

        self.grids16x16_easy = [
            [
                [-1, -1, 13, 9, -1, 8, 1, -1, -1, 11, -1, 4, 7, 16, -1, 15], [-1, -1, -1, 12, -1, 13, 14, 4, -1, 8, 1, -1, -1, 10, -1, -1], [3, -1, 4, 11, -1, 2, 7, -1, 6, 14, -1, 10, -1, 13, 9, 8], [16, 10, 15, 8, 5, -1, -1, -1, 12, -1, -1, 13, 1, -1, 6, 14],
                [1, -1, 2, 10, 9, 16, 12, -1, -1, -1, -1, -1, 15, -1, -1, 11], [-1, -1, 7, 15, -1, -1, 2, 10, 11, -1, -1, 9, -1, -1, 5, 4], [-1, -1, -1, 16, -1, -1, 5, 13, 2, 4, 14, 15, -1, -1, 10, 1], [-1, 13, 5, -1, -1, -1, -1, 15, 1, -1, -1, -1, 2, 7, 16, -1],
                [-1, -1, -1, 7, 2, 9, 4, 11, 3, 1, -1, 5, 10, 6, 14, 16], [12, 3, -1, -1, -1, -1, 8, -1, -1, -1, 11, -1, 4, 9, 15, -1], [2, 16, 11, 1, 6, -1, -1, -1, 15, -1, 4, -1, -1, 3, 8, -1], [-1, -1, 9, -1, -1, -1, -1, 7, -1, 13, 8, -1, 12, -1, -1, 2],
                [7, -1, -1, -1, -1, -1, -1, -1, 8, 12, 6, 11, 9, -1, -1, 13], [-1, -1, 12, 3, -1, -1, 13, 8, -1, -1, 16, 1, 14, 2, 11, 10], [4, -1, -1, -1, -1, -1, 11, -1, -1, -1, -1, -1, -1, 5, 7, 6], [11, 5, -1, 6, 14, -1, -1, 1, 13, -1, 7, 2, -1, 15, 4, -1]
            ],
            [
                [9, -1, 5, -1, 8, 14, -1, -1, 4, -1, -1, 3, -1, 7, -1, -1], [15, 10, -1, -1, -1, 2, 4, -1, -1, 7, -1, -1, -1, -1, -1, -1], [16, -1, -1, -1, 7, -1, 11, 9, 2, -1, -1, 15, 10, 12, 3, -1], [-1, 4, -1, 12, -1, 16, 15, 6, 8, -1, 10, -1, 9, 14, 2, 5],
                [-1, -1, -1, -1, -1, 13, 16, -1, -1, 1, 7, 11, -1, 5, -1, 9], [-1, -1, 11, -1, -1, -1, 3, -1, 15, 8, 9, -1, 6, 16, 14, -1], [8, 16, 2, 4, -1, 7, 9, 5, 6, -1, -1, 10, -1, -1, 1, -1], [14, 9, 12, 7, 6, -1, 2, -1, 16, 5, -1, 4, 11, -1, -1, 10],
                [4, 14, -1, -1, 12, -1, 10, -1, -1, 6, -1, -1, 5, 1, 15, -1], [13, -1, -1, 2, 5, 4, 14, -1, 9, 3, -1, -1, 16, 11, -1, -1], [3, 11, 9, -1, -1, 6, 1, -1, 14, -1, -1, 5, -1, -1, 12, 8], [-1, -1, -1, 6, 13, 3, 8, -1, -1, 10, 4, 12, 7, 2, -1, 14],
                [11, 1, -1, 16, -1, 10, 7, 12, -1, 15, 2, -1, -1, -1, -1, 13], [6, -1, -1, 15, 2, -1, 5, -1, -1, -1, -1, 13, -1, -1, 16, 11], [-1, 3, -1, 5, 9, -1, -1, -1, -1, 12, 16, 8, 1, 10, 6, -1], [-1, 13, 10, -1, -1, 1, -1, -1, -1, -1, -1, -1, 3, -1, 7, 2]
            ],
            [
                [8, -1, 16, 14, -1, -1, 2, 5, 6, -1, 15, 11, -1, -1, 9, 10], [15, 13, -1, -1, 3, -1, -1, 6, -1, -1, -1, -1, 2, 1, -1, 16], [9, -1, 12, 6, 13, 16, -1, -1, 1, 3, -1, 4, -1, 11, 15, -1], [-1, 10, 5, 1, -1, 11, -1, -1, -1, 16, 8, -1, -1, 14, -1, -1],
                [2, 1, 10, 4, 7, -1, 16, -1, -1, -1, 3, 6, 8, 15, -1, 5], [12, 5, 7, -1, -1, -1, -1, 15, -1, 1, 2, -1, -1, 4, -1, -1], [-1, -1, -1, -1, 2, 5, -1, -1, -1, -1, -1, -1, 16, 3, 12, 7], [6, -1, 15, 11, -1, -1, 3, -1, -1, 5, 12, 13, 10, -1, -1, -1],
                [-1, -1, 6, 8, 5, 3, -1, 4, -1, 13, 7, 1, 9, 12, 16, 15], [-1, 12, -1, 13, 1, 6, -1, 2, -1, 10, 16, 5, 4, -1, 8, -1], [7, -1, 2, -1, -1, 9, 13, -1, -1, 11, -1, 8, -1, -1, 10, -1], [-1, 11, -1, 5, 10, -1, 14, -1, 15, 12, -1, 9, 13, -1, -1, -1],
                [11, -1, -1, -1, 14, -1, -1, -1, -1, -1, -1, 7, 3, 10, 5, 1], [-1, 9, -1, 12, 6, -1, -1, 7, 11, 8, -1, -1, 14, -1, 2, -1], [13, -1, 14, 2, 16, 10, 1, 9, -1, 15, -1, -1, -1, -1, 11, -1], [-1, -1, 4, -1, 11, -1, -1, -1, 16, -1, 1, 14, 15, 9, 7, -1]
            ],
            [
                [-1, 7, -1, 16, 8, -1, 4, 15, 14, -1, -1, 6, 9, 10, -1, -1], [5, -1, 6, -1, 12, -1, 7, -1, -1, 1, -1, -1, -1, -1, 15, -1], [-1, 13, 12, 1, -1, 3, 10, -1, -1, 7, 15, 16, -1, 8, -1, 14], [10, -1, 4, 11, -1, -1, 6, -1, 8, 12, 3, -1, 5, -1, -1, 7],
                [11, -1, 14, 5, -1, -1, 16, -1, 13, -1, 1, 8, 2, 4, -1, -1], [-1, -1, 15, -1, 4, 13, 11, -1, -1, -1, -1, -1, -1, -1, 12, -1], [8, 2, -1, 6, -1, 12, 14, -1, 7, -1, 4, 3, -1, 1, 13, -1], [-1, 10, 13, 4, -1, -1, 15, 1, -1, -1, 6, -1, 14, -1, -1, 16],
                [1, 16, -1, 2, 9, -1, -1, -1, 6, 8, 7, -1, -1, 15, 5, 11], [-1, 4, 7, -1, -1, 16, -1, 3, 11, -1, 12, -1, 10, -1, 8, 6], [-1, 5, -1, 12, -1, 15, -1, 8, -1, 14, 2, 1, -1, 16, -1, 9], [-1, 8, 10, 14, -1, 11, 5, 4, -1, 3, 9, 15, -1, -1, 2, 1],
                [12, -1, 5, -1, 14, 6, 9, 2, 1, -1, -1, 10, -1, 3, -1, 13], [-1, 3, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4], [-1, 9, -1, -1, 13, -1, 8, 12, 3, 2, -1, 7, -1, 6, -1, -1], [4, -1, 1, -1, -1, 5, -1, 10, 15, 9, 16, 12, -1, -1, -1, 2]
            ],
            [
                [14, -1, 12, -1, 15, -1, 13, 16, 9, -1, -1, 10, -1, -1, 1, 11], [-1, 11, 7, -1, -1, -1, -1, -1, -1, -1, 2, 4, 14, -1, 16, 13], [8, -1, -1, -1, 14, -1, 9, -1, 12, 11, -1, 15, 3, 6, 10, -1], [2, -1, -1, -1, -1, 11, -1, -1, 16, 14, -1, 8, -1, -1, 4, -1],
                [6, 1, 11, -1, 5, 14, -1, 3, 4, 15, 7, -1, -1, -1, 9, -1], [5, 7, 10, -1, 2, 6, 15, -1, 1, 9, -1, -1, -1, 4, -1, 12], [16, -1, -1, 9, -1, 1, 7, 13, 11, -1, 3, -1, 5, -1, 6, 2], [15, -1, -1, 12, -1, -1, -1, -1, -1, 8, 6, -1, -1, -1, -1, 7],
                [-1, 2, 13, -1, -1, -1, -1, -1, -1, 4, 14, -1, -1, -1, 15, 1], [-1, -1, 1, -1, 6, -1, 14, -1, 2, -1, -1, 16, -1, -1, 7, -1], [9, 16, -1, 6, 1, -1, 4, 10, -1, -1, 11, 7, -1, 14, 12, -1], [4, 8, 14, 7, -1, -1, 2, 15, 3, -1, -1, 6, -1, 11, 13, 10],
                [7, -1, -1, -1, 10, -1, 5, 12, 8, -1, 9, -1, 1, -1, 11, -1], [11, 5, 6, -1, -1, 16, 3, 14, 7, 12, -1, -1, 15, 10, 8, 9], [13, 10, -1, 1, -1, -1, -1, 6, -1, -1, -1, -1, 16, -1, 5, 4], [3, 12, 9, 14, 4, -1, -1, 8, -1, 16, 10, -1, -1, -1, -1, 6]],
            [
                [7, -1, -1, -1, -1, -1, -1, 10, 6, -1, -1, -1, 2, 9, 4, -1], [-1, -1, 1, -1, -1, -1, 7, -1, 15, -1, -1, 10, -1, -1, -1, 13], [6, 3, 10, -1, 2, 14, 5, 16, 4, -1, -1, 13, -1, 12, -1, -1], [-1, 2, -1, 15, -1, 6, -1, -1, 11, 1, 16, -1, 5, -1, -1, -1],
                [-1, 4, 2, -1, -1, 8, 6, 12, 14, 10, -1, 9, 16, 7, 15, -1], [-1, 7, -1, 1, -1, -1, 10, -1, 8, -1, 4, 5, 14, 11, -1, -1], [-1, -1, 5, 8, -1, 15, 3, 14, -1, 6, 12, -1, -1, 4, -1, -1], [-1, 6, 11, 14, -1, 13, -1, 1, 3, 16, 7, -1, 10, 2, 12, 8],
                [5, 10, 3, -1, -1, -1, 11, 8, -1, 14, -1, 12, -1, 16, 6, -1], [-1, 12, 14, 2, 6, -1, 15, -1, -1, 9, 11, 4, 7, 3, 8, -1], [11, 9, 4, -1, 10, -1, -1, -1, 16, -1, -1, 1, -1, 5, 14, -1], [-1, 15, 7, -1, 12, -1, -1, 2, 10, 5, -1, -1, -1, 13, 9, -1],
                [-1, 11, -1, 4, 14, 10, -1, -1, -1, 3, 13, 8, -1, 15, 5, -1], [-1, 5, -1, 7, 8, -1, -1, 15, -1, -1, -1, -1, 13, 1, 11, 16], [-1, 8, 13, -1, 4, 5, -1, -1, -1, -1, 15, 16, 3, -1, 7, -1], [-1, -1, -1, -1, 13, 12, -1, -1, -1, 7, 14, 6, -1, 8, 2, -1]],
        ]

        self.grids16x16_hard = [
            [
                [-1, -1, -1, -1, -1, -1, -1, -1, 14, -1, -1, -1, 9, -1, -1, -1], [-1, 8, -1, 4, 2, 7, -1, 9, -1, 3, 11, -1, -1, 15, -1, -1], [9, -1, -1, 11, -1, -1, 16, 5, 10, 2, -1, -1, 8, 7, 3, -1], [-1, 6, -1, 15, -1, 12, 3, 13, -1, 9, -1, -1, -1, -1, -1, -1],
                [11, 4, 6, 2, 13, -1, -1, 14, 5, -1, -1, -1, -1, -1, -1, -1], [-1, 3, 5, -1, -1, -1, 7, 11, 1, 8, 12, 2, 13, -1, 15, 9], [8, -1, -1, -1, -1, -1, 15, 1, 7, 6, -1, 16, -1, -1, -1, -1], [-1, 1, -1, -1, -1, 10, 12, -1, -1, 11, 4, -1, -1, 8, -1, 5],
                [-1, 11, -1, -1, -1, -1, -1, 7, -1, 14, -1, -1, -1, 13, -1, -1], [15, 2, -1, -1, 10, 16, 6, 8, -1, 4, 13, -1, -1, -1, 14, -1], [6, 5, -1, -1, -1, 13, -1, -1, -1, 16, 8, -1, -1, 3, 9, 15], [-1, -1, 10, -1, -1, 5, -1, -1, 2, 1, -1, 7, -1, -1, -1, -1],
                [12, -1, -1, -1, -1, 11, 5, 2, 9, 10, 6, -1, 15, -1, 7, 1], [-1, 15, 7, 1, -1, -1, -1, 10, -1, 5, -1, 14, 4, -1, -1, 13], [14, 10, 11, 6, 16, 15, 1, -1, -1, -1, -1, -1, -1, 9, 12, -1], [4, -1, -1, 5, 7, -1, -1, 6, -1, 12, -1, -1, -1, -1, 8, -1]
            ],
            [
                [-1, -1, -1, 8, -1, -1, 15, -1, -1, 11, 7, -1, 14, 2, -1, 6], [-1, -1, 12, 13, -1, -1, -1, -1, -1, 15, -1, 4, -1, 8, -1, -1], [-1, 9, -1, 1, -1, -1, 3, -1, -1, 16, 8, -1, -1, 10, 11, 5], [-1, 14, -1, -1, 8, 1, -1, 10, 13, 2, 5, -1, -1, -1, 15, -1],
                [-1, 7, -1, 16, 13, -1, -1, -1, 9, 6, -1, 2, -1, 12, -1, -1], [3, 10, 6, 2, 9, -1, 8, 1, -1, 7, -1, 5, -1, 4, -1, -1], [-1, 15, 4, 12, 7, 16, -1, -1, 11, 13, 14, -1, -1, -1, 6, -1], [-1, -1, 13, -1, -1, -1, 6, -1, -1, 1, 4, -1, -1, -1, -1, -1],
                [-1, -1, -1, 4, -1, -1, -1, 11, -1, 10, 13, -1, -1, 1, -1, 8], [-1, 6, 5, 7, 10, 4, 13, 2, -1, -1, 1, 12, -1, 3, 14, 16], [-1, -1, -1, -1, -1, -1, -1, 7, -1, 14, 16, -1, -1, 13, -1, -1], [-1, -1, 14, 9, -1, -1, -1, 6, -1, 4, 3, -1, -1, -1, -1, -1],
                [-1, -1, 8, -1, -1, -1, 12, 16, -1, 5, 15, -1, -1, 14, 7, -1], [-1, 1, -1, 15, 6, -1, 2, -1, -1, -1, -1, 10, -1, 5, 16, 13], [-1, -1, 2, -1, 14, 10, 1, -1, -1, 12, 11, -1, 3, -1, -1, -1], [6, 12, 9, 10, -1, -1, -1, -1, -1, -1, 2, 16, -1, 11, -1, 15]
            ],
            [
                [-1, -1, -1, 1, -1, -1, -1, 13, -1, -1, 12, 10, -1, -1, 15, 8], [-1, -1, -1, 5, 9, 2, -1, 12, 7, 11, -1, 3, 6, -1, 4, -1], [-1, 10, -1, -1, -1, -1, -1, -1, -1, -1, 4, -1, -1, 11, -1, 16], [-1, 12, 4, -1, -1, 8, 11, -1, 15, -1, 1, -1, -1, -1, -1, 5],
                [-1, -1, 14, 11, 12, -1, -1, -1, -1, 3, 10, 1, 5, 8, 13, -1], [-1, -1, 6, -1, -1, -1, 15, -1, 13, -1, 5, -1, -1, -1, -1, -1], [12, -1, -1, -1, -1, -1, 14, -1, 6, 16, -1, -1, 10, 7, -1, 9], [10, -1, 2, -1, -1, -1, 9, -1, -1, -1, 11, 14, 16, -1, -1, -1],
                [2, 14, 1, -1, -1, -1, -1, -1, -1, 13, -1, -1, 3, 6, -1, 7], [-1, -1, -1, 16, 1, 7, -1, 14, -1, -1, -1, 15, 12, -1, -1, -1], [-1, 9, 11, 6, -1, -1, 13, 3, -1, 10, -1, -1, 15, 4, 1, -1], [4, -1, 7, 15, -1, -1, 10, 9, 3, 1, -1, -1, -1, 5, 16, 14],
                [8, 13, -1, 10, 2, -1, 16, 11, -1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, 13, -1, -1, 14, 15, -1, 9, 2, -1, 5, -1], [-1, -1, 3, 7, -1, 14, -1, -1, 2, 8, 16, 6, 4, -1, 11, -1], [-1, 2, -1, 14, 15, 9, -1, 4, 10, -1, 13, 11, -1, -1, 7, 6]
            ],
            [
                [-1, -1, -1, -1, -1, 5, -1, 16, -1, 14, 12, 11, 7, -1, -1, 4], [-1, -1, -1, -1, -1, -1, -1, -1, -1, 3, 13, 8, -1, -1, -1, -1], [-1, 1, -1, -1, 13, -1, -1, 8, -1, -1, 2, -1, -1, 3, -1, -1], [12, -1, -1, 16, -1, -1, -1, -1, 15, -1, 6, -1, -1, -1, 2, -1],
                [6, 12, 9, -1, -1, 1, -1, 13, -1, 15, -1, -1, 8, 4, -1, -1], [4, 3, 16, -1, 8, 12, 9, -1, -1, -1, 1, -1, -1, -1, -1, 15], [5, 2, -1, -1, -1, 6, -1, 7, 12, 13, -1, 16, -1, 9, 1, -1], [-1, -1, -1, -1, -1, 11, -1, 3, -1, -1, -1, 2, -1, -1, 10, -1],
                [13, 14, -1, -1, 11, 9, -1, 10, -1, 4, 5, -1, -1, -1, 7, -1], [10, -1, 6, -1, 5, -1, -1, 15, 7, 2, -1, -1, 11, -1, -1, 9], [9, -1, 5, -1, 3, 16, 7, 12, -1, 6, -1, 13, 2, -1, 4, -1], [16, 11, -1, -1, -1, 8, -1, -1, -1, -1, 14, 10, -1, 15, 3, 5],
                [7, 10, 4, -1, -1, -1, 12, -1, 11, 16, -1, 14, -1, 5, 8, -1], [-1, -1, -1, 13, -1, 7, -1, 14, -1, 5, 15, -1, 4, -1, -1, 3], [15, -1, -1, -1, -1, 3, 16, -1, 2, 8, -1, -1, -1, 11, 13, 7], [8, -1, -1, 9, -1, -1, -1, 11, -1, -1, 10, 7, 14, 16, 6, -1]
            ],
        ]

        self.grids25x25 = [
            [
                [-1, -1, -1, -1, 11, 23, 4, 24, 9, -1, 3, -1, 19, -1, -1, 5, -1, -1, -1, -1, 1, -1, 16, -1, 15], [-1, 15, 7, 9, -1, 13, -1, 22, -1, -1, 18, 23, -1, 10, 8, 19, 21, 2, 4, 6, -1, 3, -1, -1, 11],
                [17, 3, -1, -1, 21, 16, 20, -1, -1, -1, -1, 24, -1, -1, 2, -1, -1, 1, 11, -1, 25, -1, 18, -1, 10], [-1, 24, -1, 16, 4, -1, 19, 6, 11, -1, 5, 1, -1, -1, -1, -1, -1, -1, -1, 10, -1, 8, 9, 21, -1],
                [1, -1, 10, 14, 23, -1, 3, 15, -1, 21, 11, -1, 20, -1, -1, -1, 22, 18, 24, 17, -1, 19, 4, -1, 5], [8, 7, 18, -1, 14, 24, 15, 2, -1, 11, 17, -1, -1, -1, 13, -1, -1, -1, 5, 23, 21, 20, -1, -1, 25],
                [-1, -1, -1, -1, 25, -1, 14, -1, -1, -1, -1, -1, 2, -1, 15, 21, -1, 17, -1, -1, -1, -1, -1, 3, 13], [-1, 17, 3, -1, 15, 12, -1, -1, -1, 8, -1, -1, -1, 14, 5, 7, -1, -1, -1, 11, -1, 16, 6, 2, -1],
                [24, -1, -1, -1, -1, 3, 18, -1, -1, -1, -1, 11, 22, -1, -1, 10, -1, 6, -1, -1, -1, 1, -1, 17, 19], [6, 11, -1, -1, 16, -1, -1, 13, 17, -1, 12, 8, 25, -1, -1, -1, 2, 9, 15, -1, -1, -1, -1, 18, 14],
                [16, -1, 21, 23, 1, 17, -1, -1, 24, -1, 9, -1, 14, -1, -1, 4, 19, -1, -1, -1, -1, -1, 7, 10, 6], [22, -1, 14, 19, 9, 8, 13, 11, -1, 23, 2, -1, -1, 5, -1, -1, -1, 7, -1, 16, 20, -1, -1, -1, -1],
                [-1, -1, -1, 2, -1, -1, 16, 12, -1, -1, 22, -1, 21, -1, -1, 14, -1, -1, -1, 24, 3, 23, 19, -1, 18], [-1, -1, 12, 6, 3, -1, -1, 7, 21, -1, 13, -1, 8, 24, 1, 22, 23, -1, -1, 5, -1, 4, -1, 11, -1],
                [11, -1, -1, 15, 7, 10, -1, 14, -1, -1, -1, -1, 23, 25, -1, -1, -1, -1, -1, -1, 5, 13, -1, -1, 9], [-1, 10, -1, 5, -1, -1, -1, -1, 12, 18, -1, 13, 17, 19, -1, 11, 20, 24, 16, -1, 22, -1, -1, -1, 1],
                [4, -1, -1, -1, 17, -1, 10, -1, 13, -1, -1, -1, -1, -1, 7, 6, 25, -1, -1, -1, 11, -1, -1, 19, 8], [7, 22, 13, 18, -1, -1, -1, 25, -1, -1, -1, -1, 3, 23, -1, 8, -1, 4, 14, -1, -1, -1, -1, -1, 12],
                [-1, -1, 6, -1, 20, -1, -1, -1, 19, 9, -1, -1, 1, -1, -1, -1, -1, 10, -1, -1, -1, 5, -1, 14, -1], [-1, 8, 15, -1, -1, 6, 11, -1, -1, -1, 4, 10, 5, 20, -1, -1, -1, 19, 9, -1, 13, 7, 3, -1, 2],
                [-1, 23, 20, -1, 6, -1, -1, 8, -1, 2, -1, -1, 18, -1, 3, 13, -1, 22, -1, -1, -1, 15, -1, -1, 17], [21, -1, 8, -1, 18, -1, -1, -1, -1, -1, -1, 25, 10, -1, -1, 2, 3, -1, 19, -1, 14, -1, 13, -1, 20],
                [-1, -1, -1, -1, 24, -1, 6, 17, 25, 14, -1, -1, -1, -1, 9, 23, -1, 15, 10, -1, -1, 22, 2, -1, -1], [2, -1, 16, 17, -1, 21, -1, -1, -1, 13, -1, 22, -1, 6, -1, 20, -1, -1, 7, -1, 24, 12, 25, -1, 3],
                [-1, -1, -1, -1, 22, -1, 12, 16, 3, 4, 20, 5, -1, 2, -1, -1, -1, 25, -1, 18, 23, -1, 21, 8, -1]
            ],
        ]

        self.grids_by_size = {
            4: self.grids4x4,
            6: self.grids6x6,
            9: self.grids9x9,
            12: self.grids12x12,
            '16_easy': self.grids16x16_easy,
            16: self.grids16x16_hard,
            25: self.grids25x25
        }

    def loop_hitori_game_xxx(self, x):
        grids = self.grids_by_size[x]
        for grid in grids:
            game = SudokuGame(Grid(grid))
            solution = game.get_solution()
            assert solution is not None
            print("*", end="")
        print(" ", end="")

    def benchmark(self, x, loops_count):
        print(f"Starting benchmark for {x}x{x} grids")
        grids = self.grids_by_size[x]
        print(f"  runs {loops_count} loops of {len(grids)} boards")
        execution_time = timeit.timeit(lambda: self.loop_hitori_game_xxx(x), number=loops_count)
        print()
        print(f"  Average execution time : {execution_time / loops_count / len(grids):.3f} seconds")
        print("Benchmark finished")
        print("----------------------\n")
        return execution_time

    def run_benchmarks(self):
        size_loops_time = dict()
        size_loops_time[4] = [30, self.benchmark(4, 30)]
        size_loops_time[6] = [30, self.benchmark(6, 30)]
        size_loops_time[9] = [20, self.benchmark(9, 20)]
        size_loops_time[12] = [10, self.benchmark(12, 10)]
        size_loops_time['16_easy'] = [10, self.benchmark('16_easy', 10)]
        size_loops_time[16] = [10, self.benchmark(16, 10)]
        size_loops_time[25] = [1, self.benchmark(25, 1)]

        print()
        print("----------------------")
        total_executions_time = sum(loop_time[1] for loop_time in size_loops_time.values())
        print(f"Total execution time: {total_executions_time:.3f} seconds")
        print("Benchmark finished")


if __name__ == '__main__':
    benchmark = HitoriBenchmark()
    benchmark.run_benchmarks()
